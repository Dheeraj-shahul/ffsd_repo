<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register | RentEase</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap');

        html {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Poppins', sans-serif;
            display: flex;
            align-items: flex-start; 
            justify-content: center;
            margin: 0;
            background-image: url('/images/login.jpg');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            min-height: 100vh; 
            padding: 40px 20px;
            overflow-y: auto; 
        }

        .container {
            background-color: #333;
            border-radius: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            width: 400px;
            padding: 30px 50px;
            margin: 20px 0; 
        }

        .header {
            text-align: center;
            margin-bottom: 25px;
        }

        .header h1 {
            color: #FFC107;
            font-size: 24px;
            margin-bottom: 10px;
        }

        .header p {
            color: white;
            font-size: 14px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            font-size: 14px;
            color: white;
            display: block;
            margin-top: 10px;
        }

        input, select {
            background-color: #fafaf9;
            color: black;
            border: none;
            padding: 10px;
            border-radius: 10px;
            font-size: 14px;
            width: 95%;
        }

        select {
            width: 100%;
        }

        button {
            background-color: #FFC107;
            color: black;
            border: none;
            padding: 12px;
            border-radius: 10px;
            font-size: 16px;
            cursor: pointer;
            font-weight: bold;
            width: 100%;
            margin-top: 15px;
            transition: background-color 0.3s;
        }

        button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

        button:hover:not(:disabled) {
            background-color: #ff6f00;
        }

        .error {
            color: #ff4444;
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }

        .error.visible {
            display: block;
        }

        .links {
            text-align: center;
            margin-top: 15px;
        }

        .links a {
            color: rgb(34, 125, 244);
            text-decoration: underline;
            font-size: 14px;
            cursor: pointer;
        }

        .form-row {
            display: flex;
            gap: 15px;
        }

        .divider {
            margin: 20px 0;
            text-align: center;
            position: relative;
        }

        .divider::before {
            content: "";
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background-color: #666;
        }

        .divider span {
            position: relative;
            background-color: #333;
            padding: 0 15px;
            color: white;
            font-size: 14px;
        }

        .social-login {
            text-align: center;
            margin-top: 20px;
        }

        .social-btn {
            background-color: #fdfdfb;
            color: black;
            border: none;
            padding: 10px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            width: 100%;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .social-btn:hover {
            background-color: #e0d2a1;
        }

        .social-btn img {
            width: 20px;
            height: 20px;
        }

        .location-fields {
            display: none;
        }

        #first {
            margin-right: 5px;
        }

        @media (max-height: 600px) {
            body {
                align-items: flex-start;
                padding-top: 20px;
                padding-bottom: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Join RentEase</h1>
            <p>Create your account today</p>
        </div>
        
        <form id="registerForm">
            <div class="form-group">
                <label for="userType">I am a</label>
                <select id="userType" name="userType" onchange="handleUserTypeChange()">
                    <option value="tenant" <%= userType === 'tenant' ? 'selected' : '' %>>Tenant/Renter</option>
                    <option value="owner" <%= userType === 'owner' ? 'selected' : '' %>>Homeowner/Property Owner</option>
                    <option value="worker" <%= userType === 'worker' ? 'selected' : '' %>>Domestic Worker</option>
                </select>
                <div id="userTypeError" class="error"></div>
            </div>
            
            <div class="form-row">
                <div class="form-group" id="first">
                    <label for="firstName">First Name</label>
                    <input type="text" 
                           id="firstName" 
                           name="firstName" 
                           placeholder="First name" 
                           value="<%= typeof firstName !== 'undefined' ? firstName : '' %>">
                    <div id="firstNameError" class="error"><%= typeof errors !== 'undefined' && errors.firstName ? errors.firstName : '' %></div>
                </div>
                
                <div class="form-group" id="last">
                    <label for="lastName">Last Name</label>
                    <input type="text" 
                           id="lastName" 
                           name="lastName" 
                           placeholder="Last name">
                    <div id="lastNameError" class="error"></div>
                </div>
            </div>
            
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" 
                       id="email" 
                       name="email" 
                       placeholder="Enter your email">
                <div id="emailError" class="error"></div>
            </div>
            
            <div class="form-group">
                <label for="phone">Phone Number</label>
                <input type="tel" 
                       id="phone" 
                       name="phone" 
                       placeholder="Enter your phone number">
                <div id="phoneError" class="error"></div>
            </div>
            
            <div class="form-group">
                <label for="location">Primary Location</label>
                <input type="text" 
                       id="location" 
                       name="location" 
                       placeholder="City, State, Country">
                <div id="locationError" class="error"></div>
            </div>
            
            <!-- Worker-specific fields -->
            <div id="workerFields" class="location-fields" style="display: <%= (typeof userType !== 'undefined' && userType === 'worker') ? 'block' : 'none' %>">
                <div class="form-group">
                    <label for="serviceType">Service Type</label>
                    <select id="serviceType" name="serviceType">
                        <option value="" disabled <%= typeof serviceType === 'undefined' || !serviceType ? 'selected' : '' %>>Select service type</option>
                        <option value="cooking" <%= serviceType === 'cooking' ? 'selected' : '' %>>Cooking</option>
                        <option value="cleaning" <%= serviceType === 'cleaning' ? 'selected' : '' %>>Cleaning</option>
                        <option value="laundry" <%= serviceType === 'laundry' ? 'selected' : '' %>>Laundry</option>
                        <option value="childcare" <%= serviceType === 'childcare' ? 'selected' : '' %>>Childcare</option>
                        <option value="eldercare" <%= serviceType === 'eldercare' ? 'selected' : '' %>>Elder Care</option>
                        <option value="gardening" <%= serviceType === 'gardening' ? 'selected' : '' %>>Gardening</option>
                        <option value="other" <%= serviceType === 'other' ? 'selected' : '' %>>Other</option>
                    </select>
                    <div id="serviceTypeError" class="error"></div>
                </div>
                
                <div class="form-group">
                    <label for="experience">Experience (years)</label>
                    <input type="number" 
                           id="experience" 
                           name="experience" 
                           min="0" 
                           placeholder="Years of experience"
                           value="<%= typeof experience !== 'undefined' ? experience : '' %>">
                    <div id="experienceError" class="error"></div>
                </div>
            </div>
            
            <!-- Homeowner-specific fields -->
            <div id="homeownerFields" class="location-fields" style="display: <%= (typeof userType !== 'undefined' && userType === 'owner') ? 'block' : 'none' %>">
                <div class="form-group">
                    <label for="numProperties">Number of Properties</label>
                    <input type="number" 
                           id="numProperties" 
                           name="numProperties" 
                           min="1" 
                           placeholder="How many properties do you own?"
                           value="<%= typeof numProperties !== 'undefined' ? numProperties : '' %>">
                    <div id="numPropertiesError" class="error"></div>
                </div>
            </div>
            
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" 
                       id="password" 
                       name="password" 
                       placeholder="Create a password">
                <div id="passwordError" class="error"></div>
            </div>
            
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <input type="password" 
                       id="confirmPassword" 
                       name="confirmPassword" 
                       placeholder="Confirm your password">
                <div id="confirmPasswordError" class="error"></div>
            </div>
            
            <button type="submit" id="registerButton" disabled>Register</button>
            <div id="serverError" class="error"></div>
            
            <div class="divider">
                <span>OR</span>
            </div>
            
            <div class="social-login">
                <button type="button" class="social-btn" onclick="registerWithGoogle()">
                    <img src="https://cdn2.iconfinder.com/data/icons/social-media-2259/512/search-512.png" alt="Google">
                    Register with Google
                </button>
            </div>
            
            <div class="links">
                <p>Already have an account? <a href="/login">Login</a></p>
            </div>
        </form>
    </div>

    <script>
        // Function to toggle user type specific fields
        function handleUserTypeChange() {
            const userType = document.getElementById('userType').value;
            document.getElementById('workerFields').style.display = 'none';
            document.getElementById('homeownerFields').style.display = 'none';
            
            if (userType === 'worker') {
                document.getElementById('workerFields').style.display = 'block';
            } else if (userType === 'owner') {
                document.getElementById('homeownerFields').style.display = 'block';
            }
            validateForm();
        }

        // Function to validate a single field
        function validateField(field) {
            const id = field.id;
            const value = field.value.trim();
            const errorElement = document.getElementById(`${id}Error`);

            // Skip validation if the field hasn't been touched
            if (!field.dataset.touched) return true;

            if (id === 'firstName') {
                if (!value) {
                    errorElement.textContent = 'First name is required';
                    errorElement.classList.add('visible');
                    return false;
                } else if (!/^[A-Za-z\s-]+$/.test(value)) {
                    errorElement.textContent = 'First name must contain only letters, spaces';
                    errorElement.classList.add('visible');
                    return false;
                } else {
                    errorElement.classList.remove('visible');
                    return true;
                }
            }

            if (id === 'lastName') {
                if (!value) {
                    errorElement.textContent = 'Last name is required';
                    errorElement.classList.add('visible');
                    return false;
                } else if (!/^[A-Za-z\s-]+$/.test(value)) {
                    errorElement.textContent = 'Last name must contain only letters, spaces';
                    errorElement.classList.add('visible');
                    return false;
                } else {
                    errorElement.classList.remove('visible');
                    return true;
                }
            }

            if (id === 'email') {
                if (!value) {
                    errorElement.textContent = 'Email is required';
                    errorElement.classList.add('visible');
                    return false;
                } else if (!/^[a-zA-Z][a-zA-Z0-9._%+-]*@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(value)) {
                    errorElement.textContent = 'Please enter a valid email address (e.g., user@gmail.com)';
                    errorElement.classList.add('visible');
                    return false;
                } else {
                    errorElement.classList.remove('visible');
                    return true;
                }
            }

            if (id === 'phone') {
                if (!value) {
                    errorElement.textContent = 'Phone number is required';
                    errorElement.classList.add('visible');
                    return false;
                } else if (!/^[0-9]{10}$/.test(value)) {
                    errorElement.textContent = 'Please enter a valid 10-digit phone number';
                    errorElement.classList.add('visible');
                    return false;
                } else {
                    errorElement.classList.remove('visible');
                    return true;
                }
            }

            if (id === 'location') {
                if (!value) {
                    errorElement.textContent = 'Location is required';
                    errorElement.classList.add('visible');
                    return false;
                } else {
                    errorElement.classList.remove('visible');
                    return true;
                }
            }

            if (id === 'serviceType') {
                if (!value) {
                    errorElement.textContent = 'Please select a service type';
                    errorElement.classList.add('visible');
                    return false;
                } else {
                    errorElement.classList.remove('visible');
                    return true;
                }
            }

            if (id === 'experience') {
                if (!value || value < 0) {
                    errorElement.textContent = 'Please enter valid years of experience';
                    errorElement.classList.add('visible');
                    return false;
                } else {
                    errorElement.classList.remove('visible');
                    return true;
                }
            }

            if (id === 'numProperties') {
                if (!value || value < 1) {
                    errorElement.textContent = 'Please enter a valid number of properties';
                    errorElement.classList.add('visible');
                    return false;
                } else {
                    errorElement.classList.remove('visible');
                    return true;
                }
            }

            if (id === 'password') {
                if (!value) {
                    errorElement.textContent = 'Password is required';
                    errorElement.classList.add('visible');
                    return false;
                } else if (value.length < 8) {
                    errorElement.textContent = 'Password must be at least 8 characters';
                    errorElement.classList.add('visible');
                    return false;
                } else if (!/[A-Z]/.test(value) || !/[a-z]/.test(value) || !/[0-9]/.test(value)) {
                    errorElement.textContent = 'Password must contain uppercase, lowercase letters, and numbers';
                    errorElement.classList.add('visible');
                    return false;
                } else {
                    errorElement.classList.remove('visible');
                    return true;
                }
            }

            if (id === 'confirmPassword') {
                const password = document.getElementById('password').value;
                if (!value) {
                    errorElement.textContent = 'Please confirm your password';
                    errorElement.classList.add('visible');
                    return false;
                } else if (value !== password) {
                    errorElement.textContent = 'Passwords do not match';
                    errorElement.classList.add('visible');
                    return false;
                } else {
                    errorElement.classList.remove('visible');
                    return true;
                }
            }

            return true;
        }

        // Function to validate the entire form for button enabling
        function validateForm() {
            let isValid = true;

            const fields = [
                'firstName', 'lastName', 'email', 'phone', 'location', 'password', 'confirmPassword'
            ];

            const userType = document.getElementById('userType').value;
            if (userType === 'worker') {
                fields.push('serviceType', 'experience');
            } else if (userType === 'owner') {
                fields.push('numProperties');
            }

            fields.forEach(id => {
                const field = document.getElementById(id);
                if (field) {
                    const value = field.value.trim();
                    if (id === 'firstName' || id === 'lastName') {
                        if (!value || !/^[A-Za-z\s-]+$/.test(value)) {
                            isValid = false;
                        }
                    } else if (id === 'email') {
                        if (!value || !/^[a-zA-Z][a-zA-Z0-9._%+-]*@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(value)) {
                            isValid = false;
                        }
                    } else if (id === 'phone') {
                        if (!value || !/^[0-9]{10}$/.test(value)) {
                            isValid = false;
                        }
                    } else if (id === 'location') {
                        if (!value) {
                            isValid = false;
                        }
                    } else if (id === 'serviceType') {
                        if (!value) {
                            isValid = false;
                        }
                    } else if (id === 'experience') {
                        if (!value || value < 0) {
                            isValid = false;
                        }
                    } else if (id === 'numProperties') {
                        if (!value || value < 1) {
                            isValid = false;
                        }
                    } else if (id === 'password') {
                        if (!value || value.length < 8 || !/[A-Z]/.test(value) || !/[a-z]/.test(value) || !/[0-9]/.test(value)) {
                            isValid = false;
                        }
                    } else if (id === 'confirmPassword') {
                        const password = document.getElementById('password').value;
                        if (!value || value !== password) {
                            isValid = false;
                        }
                    }
                }
            });

            document.getElementById('registerButton').disabled = !isValid;
        }

        // Add event listeners for validation on focus and blur
        const inputs = document.querySelectorAll('input, select');
        inputs.forEach(input => {
            // Mark field as touched when it gains focus
            input.addEventListener('focus', () => {
                input.dataset.touched = 'true';
            });

            // Validate on blur (when leaving the field via click, tab, or other navigation)
            input.addEventListener('blur', () => {
                validateField(input);
                validateForm();
            });

            // Update button state on input
            input.addEventListener('input', validateForm);
        });

        // Initial setup
        handleUserTypeChange();
        validateForm();

        // Form submission
        document.getElementById('registerForm').addEventListener('submit', async function(event) {
            event.preventDefault();
            let isValid = true;

            // Validate all fields and show errors
            const fields = [
                'firstName', 'lastName', 'email', 'phone', 'location', 'password', 'confirmPassword'
            ];

            const userType = document.getElementById('userType').value;
            if (userType === 'worker') {
                fields.push('serviceType', 'experience');
            } else if (userType === 'owner') {
                fields.push('numProperties');
            }

            fields.forEach(id => {
                const field = document.getElementById(id);
                if (field) {
                    field.dataset.touched = 'true'; // Mark as touched for submission
                    if (!validateField(field)) {
                        isValid = false;
                    }
                }
            });

            if (isValid) {
                const form = event.target;
                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());
                delete data.confirmPassword;

                try {
                    const res = await fetch('/register', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });
                    const result = await res.json();
                    if (res.ok && result.redirectUrl) {
                        window.location.href = result.redirectUrl;
                    } else {
                        document.getElementById('serverError').textContent = result.error || 'Registration failed';
                        document.getElementById('serverError').classList.add('visible');
                    }
                } catch (err) {
                    document.getElementById('serverError').textContent = 'Network error';
                    document.getElementById('serverError').classList.add('visible');
                }
            }
        });

        function registerWithGoogle() {
            console.log('Register with Google clicked');
            // Implement Google OAuth here if needed
        }
    </script>
</body>
</html>